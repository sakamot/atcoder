a,b,x,y = gets.chomp.split(" ").map(&:to_i)

# パターン
# 1: Bのa階に廊下で移動して、階段でb階まで移動する
# 2: Bのa-1階に廊下で移動して、階段でb階まで移動する
# 3: 廊下のみで移動する a > b の時 2(a-b)-1回廊下を使う
# 4: 廊下のみで移動する a ≤ b の時 2(b-a)+1回廊下を使う

puts [
  x + y * ((a-b).abs),
  a > 1 ? x + y * ((a - 1 - b).abs) : 100000, # a=1階の時はa-1階に下がれない
  a > b ? x * (2 * (a - b) - 1) : 100000,
  a <= b ? x * (2 * (b - a) + 1) : 100000,
].min

### ワーシャルフロイドで解く ###

d = Array.new(200) { [10**10] * 200 }

for k in 0..99
  # k=99 は100階
  if k != 99
    # Aの1階→Aの2階段のパターン(階段)
    d[k][k+1] = d[k+1][k] = y
    d[k+100][k+101] = d[k+101][k+100] = y
  end

  # Aの1階→Bの1階段のパターン(廊下)
  d[k][k+100] = d[k+100][k] = x

  # Aの2階→Bの1階段のパターン(廊下)
  d[k][k+99] = d[k+99][k] = x if k > 0

  d[k][k] = 0
end

for k in 0..199
  for i in 0..199
    for j in 0..199
      d[i][j] = [d[i][j], d[i][k] + d[k][j]].min
    end
  end
end

puts d[a-1][b+99]
